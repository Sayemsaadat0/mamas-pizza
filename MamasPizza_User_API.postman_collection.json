{
	"info": {
		"_postman_id": "12345678-1234-1234-1234-123456789012",
		"name": "MamasPizza User Authentication API",
		"description": "Complete user authentication API collection for MamasPizza application with Laravel Sanctum, role-based access, and profile management with image upload support",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Registration",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"register"
							]
						},
						"description": "Register a new user account (role will be automatically set to 'user')"
					},
					"response": []
				}
			],
			"description": "User registration endpoints"
		},
		{
			"name": "User Authentication",
			"item": [
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.access_token) {",
									"        pm.environment.set('access_token', response.data.access_token);",
									"        pm.environment.set('user_id', response.data.user.id);",
									"        pm.environment.set('user_role', response.data.user.role);",
									"        pm.environment.set('user_name', response.data.user.name);",
									"        pm.environment.set('user_email', response.data.user.email);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"sayem@gmail.com\",\n    \"password\": \"admin1234\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"login"
							]
						},
						"description": "Login user and get access token"
					},
					"response": []
				}
			],
			"description": "User authentication endpoints"
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"user"
							]
						},
						"description": "Get current authenticated user information"
					},
					"response": []
				},
				{
					"name": "Get My Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"me"
							]
						},
						"description": "Get authenticated user profile data with token validation"
					},
					"response": []
				},
				{
					"name": "Update My Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Updated Name",
									"type": "text"
								},
								{
									"key": "email",
									"value": "updated@example.com",
									"type": "text"
								},
								{
									"key": "user_image",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/me/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"{{user_id}}"
							]
						},
						"description": "Update authenticated user profile with image upload support"
					},
					"response": []
				},
				{
					"name": "Update Profile (JSON Only)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Name\",\n    \"email\": \"updated@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/me/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"{{user_id}}"
							]
						},
						"description": "Update authenticated user profile data without image upload"
					},
					"response": []
				},
				{
					"name": "Logout Current Session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						},
						"description": "Logout current session (revoke current token)"
					},
					"response": []
				},
				{
					"name": "Logout All Devices",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/logout-all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"logout-all"
							]
						},
						"description": "Logout from all devices (revoke all tokens)"
					},
					"response": []
				},
				{
					"name": "Change Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"previous_password\": \"password123\",\n    \"new_password\": \"newpassword123\",\n    \"confirm_new_password\": \"newpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/change-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"change-password"
							]
						},
						"description": "Change user password (requires previous password, new password, and confirmation)"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Delivery Addresses",
			"item": [
				{
					"name": "Get My Delivery Addresses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/delivery-addresses",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"delivery-addresses"
							]
						},
						"description": "Get all delivery addresses for authenticated user (token required)"
					},
					"response": []
				},
				{
					"name": "Create Delivery Address",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fields\": \"Residential Area\",\n    \"address_line_1\": \"House 10, Road 5, Dhaka\",\n    \"address_line_2\": \"Near the main gate, 2nd floor\",\n    \"post_code\": \"1200\",\n    \"details\": \"Please call before delivery\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/delivery-addresses",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"delivery-addresses"
							]
						},
						"description": "Create a new delivery address for authenticated user (token required). User can only have one delivery address."
					},
					"response": []
				},
				{
					"name": "Get Delivery Address by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/delivery-addresses/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"delivery-addresses",
								"1"
							]
						},
						"description": "Get a specific delivery address by ID (token required, only own addresses)"
					},
					"response": []
				},
				{
					"name": "Update Delivery Address",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address_line_1\": \"House 25, Road 10, Chittagong\",\n    \"address_line_2\": \"Apartment 3B\",\n    \"post_code\": \"4000\",\n    \"details\": \"Updated address details\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/delivery-addresses/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"delivery-addresses",
								"1"
							]
						},
						"description": "Update a delivery address by ID (token required, only own addresses)"
					},
					"response": []
				},
				{
					"name": "Delete Delivery Address",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/delivery-addresses/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"delivery-addresses",
								"1"
							]
						},
						"description": "Delete a delivery address by ID (token required, only own addresses)"
					},
					"response": []
				},
				{
					"name": "Get My Delivery Addresses by User ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users/{{user_id}}/delivery-addresses",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_id}}",
								"delivery-addresses"
							]
						},
						"description": "Get all delivery addresses for authenticated user (token required, only own addresses)"
					},
					"response": []
				}
			],
			"description": "Delivery address management endpoints (authentication required). Each user can only have one delivery address."
		},
		{
			"name": "Restaurant Management",
			"item": [
				{
					"name": "Get All Restaurants",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/restaurants",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants"
							]
						},
						"description": "Get all restaurants (token required)"
					},
					"response": []
				},
				{
					"name": "Create Restaurant",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"privacy_policy\": \"This is our privacy policy content...\",\n    \"terms\": \"These are our terms and conditions...\",\n    \"refund_process\": \"Our refund process details...\",\n    \"license\": \"Restaurant license information...\",\n    \"isShopOpen\": true,\n    \"shop_name\": \"Mama's Pizza Restaurant\",\n    \"shop_address\": \"123 Main Street, City, State, ZIP Code\",\n    \"shop_details\": \"We serve the best pizza in town with fresh ingredients and fast delivery.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/restaurants",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants"
							]
						},
						"description": "Create a new restaurant (token required)"
					},
					"response": []
				},
				{
					"name": "Get Restaurant by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/restaurants/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"1"
							]
						},
						"description": "Get a specific restaurant by ID (token required)"
					},
					"response": []
				},
				{
					"name": "Update Restaurant",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"privacy_policy\": \"Updated privacy policy content...\",\n    \"terms\": \"Updated terms and conditions...\",\n    \"refund_process\": \"Updated refund process details...\",\n    \"license\": \"Updated restaurant license information...\",\n    \"isShopOpen\": false,\n    \"shop_name\": \"Mama's Pizza Restaurant - Updated\",\n    \"shop_address\": \"456 New Street, City, State, ZIP Code\",\n    \"shop_details\": \"Updated restaurant details with new information.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/restaurants/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"1"
							]
						},
						"description": "Update a restaurant by ID (token required)"
					},
					"response": []
				},
				{
					"name": "Delete Restaurant",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/restaurants/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"restaurants",
								"1"
							]
						},
						"description": "Delete a restaurant by ID (token required)"
					},
					"response": []
				}
			],
			"description": "Restaurant management endpoints (authentication required)"
		},
		{
			"name": "Category Management",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						},
						"description": "Get all categories (token required)"
					},
					"response": []
				},
				{
					"name": "Create Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Pizza\",\n    \"status\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						},
						"description": "Create a new category (token required)"
					},
					"response": []
				},
				{
					"name": "Get Category by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/categories/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"1"
							]
						},
						"description": "Get a specific category by ID (token required)"
					},
					"response": []
				},
				{
					"name": "Update Category",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Premium Pizza\",\n    \"status\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/categories/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"1"
							]
						},
						"description": "Update a category by ID (token required)"
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/categories/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"1"
							]
						},
						"description": "Delete a category by ID (token required)"
					},
					"response": []
				}
			],
			"description": "Category management endpoints (authentication required)"
		},
		{
			"name": "Item Management",
			"item": [
				{
					"name": "Get All Items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/items",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"items"
							]
						},
						"description": "Get all items with category details (public endpoint, no authentication required)"
					},
					"response": []
				},
				{
					"name": "Get Items by Category",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/items?category_id=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"items"
							],
							"query": [
								{
									"key": "category_id",
									"value": "1",
									"description": "Filter items by category ID"
								}
							]
						},
						"description": "Get items filtered by category ID (public endpoint)"
					},
					"response": []
				},
				{
					"name": "Search Items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/items?search=pizza",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"items"
							],
							"query": [
								{
									"key": "search",
									"value": "pizza",
									"description": "Search items by name only"
								}
							]
						},
						"description": "Search items by name only (public endpoint)"
					},
					"response": []
				},
				{
					"name": "Get Items with Category and Search",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/items?category_id=1&search=margherita&per_page=10&page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"items"
							],
							"query": [
								{
									"key": "category_id",
									"value": "1",
									"description": "Filter by category ID"
								},
								{
									"key": "search",
									"value": "margherita",
									"description": "Search by name only"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Number of items per page (default: 15)"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number (default: 1)"
								}
							]
						},
						"description": "Get items with both category filter and search (public endpoint)"
					},
					"response": []
				},
				{
					"name": "Get Items - Page 2",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/items?page=2&per_page=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"items"
							],
							"query": [
								{
									"key": "page",
									"value": "2",
									"description": "Get page 2"
								},
								{
									"key": "per_page",
									"value": "5",
									"description": "5 items per page"
								}
							]
						},
						"description": "Get page 2 with 5 items per page (public endpoint)"
					},
					"response": []
				},
				{
					"name": "Create Item (JSON Only)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Margherita Pizza\",\n    \"main_price\": 12.99,\n    \"prev_price\": 15.99,\n    \"details\": \"Classic pizza with tomato sauce, mozzarella cheese, and fresh basil\",\n    \"category_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/items",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"items"
							]
						},
						"description": "Create a new item without thumbnail (token required)"
					},
					"response": []
				},
				{
					"name": "Create Item with Thumbnail",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Pepperoni Pizza",
									"type": "text"
								},
								{
									"key": "main_price",
									"value": "14.99",
									"type": "text"
								},
								{
									"key": "prev_price",
									"value": "17.99",
									"type": "text"
								},
								{
									"key": "details",
									"value": "Delicious pizza with pepperoni, mozzarella cheese, and tomato sauce",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "thumbnail",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/items",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"items"
							]
						},
						"description": "Create a new item with thumbnail upload (token required)"
					},
					"response": []
				},
				{
					"name": "Get Item by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/items/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"1"
							]
						},
						"description": "Get a specific item by ID with category details (token required)"
					},
					"response": []
				},
				{
					"name": "Update Item (JSON Only)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Margherita Pizza\",\n    \"main_price\": 13.99,\n    \"prev_price\": 16.99,\n    \"details\": \"Updated classic pizza with premium ingredients\",\n    \"category_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/items/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"1"
							]
						},
						"description": "Update an item without changing thumbnail (token required)"
					},
					"response": []
				},
				{
					"name": "Update Item with New Thumbnail",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Updated Pepperoni Pizza",
									"type": "text"
								},
								{
									"key": "main_price",
									"value": "15.99",
									"type": "text"
								},
								{
									"key": "prev_price",
									"value": "18.99",
									"type": "text"
								},
								{
									"key": "details",
									"value": "Updated delicious pizza with premium pepperoni",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "thumbnail",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/items/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"1"
							]
						},
						"description": "Update an item with new thumbnail upload (token required)"
					},
					"response": []
				},
				{
					"name": "Delete Item",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/items/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"1"
							]
						},
						"description": "Delete an item by ID (token required)"
					},
					"response": []
				}
			],
			"description": "Item management endpoints with thumbnail upload support (authentication required)"
		},
		{
			"name": "User Cart Management (Authenticated)",
			"item": [
				{
					"name": "Get My Cart Items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/user/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"cart"
							]
						},
						"description": "Get all cart items for authenticated user with item details, category info, and calculated totals"
					},
					"response": []
				},
				{
					"name": "Add Item to User Cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": 1,\n    \"quantity\": 2\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/user/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"cart"
							]
						},
						"description": "Add item to authenticated user's cart or update quantity if item already exists (quantity 1-100)"
					},
					"response": []
				},
				{
					"name": "Get Cart Item by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/cart/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"cart",
								"1"
							]
						},
						"description": "Get specific cart item by ID with full details and calculated total price"
					},
					"response": []
				},
				{
					"name": "Update Cart Item Quantity",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"quantity\": 3\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/cart/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"cart",
								"1"
							]
						},
						"description": "Update quantity of specific cart item (quantity 1-100)"
					},
					"response": []
				},
				{
					"name": "Remove Cart Item",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/cart/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"cart",
								"1"
							]
						},
						"description": "Remove specific item from cart"
					},
					"response": []
				},
				{
					"name": "Clear Entire Cart",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"cart"
							]
						},
						"description": "Clear all items from user's cart"
					},
					"response": []
				},
				{
					"name": "Get Cart Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/cart-summary",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"cart-summary"
							]
						},
						"description": "Get cart summary with total items, total price, and unique item count"
					},
					"response": []
				},
				{
					"name": "Add Multiple Items to Cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": 2,\n    \"quantity\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"cart"
							]
						},
						"description": "Add another item to cart (different item ID)"
					},
					"response": []
				},
				{
					"name": "Update Existing Cart Item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": 1,\n    \"quantity\": 2\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"cart"
							]
						},
						"description": "Add more quantity to existing cart item (will add to existing quantity)"
					},
					"response": []
				}
			],
			"description": "User cart management endpoints for authenticated users (authentication required)"
		},
		{
			"name": "Guest Cart Management (No Authentication)",
			"item": [
				{
					"name": "Add Item to Guest Cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"guest_id\": \"guest_12345\",\n    \"item_id\": 1,\n    \"quantity\": 2\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/guest/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"guest",
								"cart"
							]
						},
						"description": "Add item to guest cart or update quantity if item already exists (no authentication required)"
					},
					"response": []
				},
				{
					"name": "Get My Guest Cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/guest/cart?guest_id=guest_12345",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"guest",
								"cart"
							],
							"query": [
								{
									"key": "guest_id",
									"value": "guest_12345",
									"description": "Guest ID to identify the cart"
								}
							]
						},
						"description": "Get all guest cart items with item details, category info, and calculated totals"
					},
					"response": []
				},
				{
					"name": "Update Guest Cart Item Quantity",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"guest_id\": \"guest_12345\",\n    \"quantity\": 3\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/guest/cart/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"guest",
								"cart",
								"1"
							]
						},
						"description": "Update quantity of specific guest cart item (quantity 1-100)"
					},
					"response": []
				},
				{
					"name": "Remove Guest Cart Item",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/guest/cart/1?guest_id=guest_12345",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"guest",
								"cart",
								"1"
							],
							"query": [
								{
									"key": "guest_id",
									"value": "guest_12345",
									"description": "Guest ID to identify the cart owner"
								}
							]
						},
						"description": "Remove specific item from guest cart (no authentication required)"
					},
					"response": []
				}
		],
		"description": "Guest cart management endpoints for non-authenticated users (no authentication required)"
	},
	{
		"name": "Guest Order Management (No Authentication)",
		"item": [
			{
				"name": "Create Guest Order",
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"guest_id\": \"guest_12345\",\n    \"delivery_type\": \"delivery\",\n    \"customer_name\": \"John Doe\",\n    \"customer_phone\": \"+1234567890\",\n    \"customer_email\": \"john@example.com\",\n    \"delivery_address\": {\n        \"fields\": \"Home\",\n        \"address_line_1\": \"123 Main Street\",\n        \"address_line_2\": \"Apt 4B\",\n        \"post_code\": \"12345\",\n        \"details\": \"Ring doorbell twice\"\n    },\n    \"special_instructions\": \"Extra napkins please\",\n    \"payment_method\": \"stripe\",\n    \"tax_rate\": 8.5,\n    \"delivery_fee\": 5.00,\n    \"discount_amount\": 0\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/orders",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"orders"
						]
					},
					"description": "Create a new order for guest users without authentication. Requires guest_id, customer details, and delivery address passed from frontend."
				},
				"response": []
			},
			{
				"name": "Create Guest Order - Pickup",
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"guest_id\": \"guest_12345\",\n    \"delivery_type\": \"pickup\",\n    \"customer_name\": \"Jane Smith\",\n    \"customer_phone\": \"+1987654321\",\n    \"customer_email\": \"jane@example.com\",\n    \"delivery_address\": {\n        \"fields\": \"Restaurant Pickup\",\n        \"address_line_1\": \"Restaurant Location\",\n        \"address_line_2\": \"\",\n        \"post_code\": \"12345\",\n        \"details\": \"Will pickup at counter\"\n    },\n    \"special_instructions\": \"Please prepare extra sauces\",\n    \"payment_method\": \"cash\",\n    \"tax_rate\": 8.5,\n    \"delivery_fee\": 0,\n    \"discount_amount\": 2.50\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/orders",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"orders"
						]
					},
					"description": "Create a pickup order for guest users with cash payment and discount"
				},
				"response": []
			},
			{
				"name": "Get My Guest Orders",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/guest/orders?guest_id=guest_12345",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"orders"
						],
						"query": [
							{
								"key": "guest_id",
								"value": "guest_12345",
								"description": "Guest ID to identify orders"
							}
						]
					},
					"description": "Get all orders for a guest user by guest_id (no authentication required)"
				},
				"response": []
			},
			{
				"name": "Get Guest Order by Order Number",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/guest/orders/ORD-20250930-0001?guest_id=guest_12345",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"orders",
							"ORD-20250930-0001"
						],
						"query": [
							{
								"key": "guest_id",
								"value": "guest_12345",
								"description": "Guest ID to verify ownership"
							}
						]
					},
					"description": "Get specific guest order by order number for tracking (no authentication required)"
				},
				"response": []
			}
		],
		"description": "Guest order management endpoints for non-authenticated users (no authentication required)"
	},
	{
		"name": "Order Management",
		"item": [
			{
				"name": "Get My Orders",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Authorization",
							"value": "Bearer {{access_token}}",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/orders",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"orders"
						]
					},
					"description": "Get all orders for authenticated user with filtering options"
				},
				"response": []
			},
			{
				"name": "Get My Orders - Filter by Status",
				"request": {
					"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/orders?status=pending&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							],
							"query": [
								{
									"key": "status",
									"value": "pending",
									"description": "Filter by order status"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Number of orders per page"
								}
							]
						},
						"description": "Get orders filtered by status (pending, confirmed, preparing, ready, out_for_delivery, delivered, cancelled, refunded)"
					},
					"response": []
				},
				{
					"name": "Create Order from Cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delivery_address_id\": 1,\n    \"delivery_type\": \"delivery\",\n    \"special_instructions\": \"Please ring the doorbell twice\",\n    \"payment_method\": \"stripe\",\n    \"tax_rate\": 8.5,\n    \"delivery_fee\": 2.99,\n    \"discount_amount\": 0\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							]
						},
						"description": "Create a new order from cart items with delivery address and payment method"
					},
					"response": []
				},
				{
					"name": "Create Order - Pickup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delivery_address_id\": 1,\n    \"delivery_type\": \"pickup\",\n    \"special_instructions\": \"Please prepare extra napkins\",\n    \"payment_method\": \"cash\",\n    \"tax_rate\": 8.5,\n    \"delivery_fee\": 0,\n    \"discount_amount\": 5.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							]
						},
						"description": "Create a pickup order with cash payment and discount"
					},
					"response": []
				},
				{
					"name": "Get Order by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"1"
							]
						},
						"description": "Get specific order details with items and delivery address"
					},
					"response": []
				},
				{
					"name": "Cancel Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/1/cancel",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"1",
								"cancel"
							]
						},
						"description": "Cancel an order (only if status is pending or confirmed)"
					},
					"response": []
				},
				{
					"name": "Get Order Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/1/summary",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"1",
								"summary"
							]
						},
						"description": "Get order summary for payment processing (Stripe integration)"
					},
					"response": []
				},
				{
					"name": "Update Payment Status - Stripe Success",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_status\": \"paid\",\n    \"stripe_payment_intent_id\": \"pi_1234567890abcdef\",\n    \"stripe_charge_id\": \"ch_1234567890abcdef\",\n    \"payment_details\": {\n        \"payment_method\": \"card\",\n        \"card_brand\": \"visa\",\n        \"card_last4\": \"4242\",\n        \"amount\": 25.99\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders/1/payment-status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"1",
								"payment-status"
							]
						},
						"description": "Update payment status after successful Stripe payment"
					},
					"response": []
				},
				{
					"name": "Update Payment Status - Stripe Failed",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_status\": \"failed\",\n    \"stripe_payment_intent_id\": \"pi_1234567890abcdef\",\n    \"payment_details\": {\n        \"error_code\": \"card_declined\",\n        \"error_message\": \"Your card was declined.\",\n        \"decline_code\": \"generic_decline\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders/1/payment-status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"1",
								"payment-status"
							]
						},
						"description": "Update payment status when Stripe payment fails"
					},
					"response": []
				},
				{
					"name": "Update Payment Status - Refund",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payment_status\": \"refunded\",\n    \"stripe_refund_id\": \"re_1234567890abcdef\",\n    \"payment_details\": {\n        \"refund_amount\": 25.99,\n        \"refund_reason\": \"requested_by_customer\",\n        \"refund_status\": \"succeeded\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders/1/payment-status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"1",
								"payment-status"
							]
						},
						"description": "Update payment status when order is refunded"
					},
					"response": []
				}
			],
			"description": "Order management endpoints for creating, viewing, and managing orders with Stripe payment integration (authentication required)"
		},
		{
			"name": "Stripe Payment Integration",
			"item": [
				{
					"name": "Create Stripe Checkout Session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/payments/create-session",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"payments",
								"create-session"
							]
						},
						"description": "Create a Stripe Checkout session for an order. Returns session URL for payment processing."
					},
					"response": []
				},
				{
					"name": "Verify Payment Session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session_id\": \"cs_test_1234567890abcdef\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/payments/verify",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"payments",
								"verify"
							]
						},
						"description": "Verify payment session after redirect from Stripe Checkout (optional for immediate verification)"
					},
					"response": []
				},
				{
					"name": "Get Payment Session Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/payments/session-status?session_id=cs_test_1234567890abcdef",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"payments",
								"session-status"
							],
							"query": [
								{
									"key": "session_id",
									"value": "cs_test_1234567890abcdef",
									"description": "Stripe checkout session ID"
								}
							]
						},
						"description": "Get current status of a Stripe checkout session"
					},
					"response": []
				},
				{
					"name": "Stripe Webhook (Test)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Stripe-Signature",
								"value": "t=1234567890,v1=test_signature",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"evt_test_webhook\",\n    \"object\": \"event\",\n    \"api_version\": \"2020-08-27\",\n    \"created\": 1234567890,\n    \"data\": {\n        \"object\": {\n            \"id\": \"cs_test_1234567890abcdef\",\n            \"object\": \"checkout.session\",\n            \"payment_status\": \"paid\",\n            \"payment_intent\": \"pi_test_1234567890abcdef\",\n            \"amount_total\": 2599,\n            \"currency\": \"usd\",\n            \"customer_details\": {\n                \"email\": \"customer@example.com\",\n                \"name\": \"John Doe\"\n            },\n            \"metadata\": {\n                \"order_id\": \"1\",\n                \"order_number\": \"ORD-20250101-0001\",\n                \"user_id\": \"1\"\n            }\n        }\n    },\n    \"livemode\": false,\n    \"pending_webhooks\": 1,\n    \"request\": {\n        \"id\": \"req_test_1234567890abcdef\",\n        \"idempotency_key\": null\n    },\n    \"type\": \"checkout.session.completed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/stripe/webhook",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stripe",
								"webhook"
							]
						},
						"description": "Test Stripe webhook endpoint (public endpoint, no authentication required). This simulates a checkout.session.completed event."
					},
					"response": []
				}
			],
			"description": "Stripe payment integration endpoints for creating checkout sessions, verifying payments, and handling webhooks"
		},
		{
			"name": "Complete Payment Workflow",
			"item": [
				{
					"name": "Step 1: Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.access_token) {",
									"        pm.environment.set('access_token', response.data.access_token);",
									"        pm.environment.set('user_id', response.data.user.id);",
									"        pm.environment.set('user_role', response.data.user.role);",
									"        pm.environment.set('user_name', response.data.user.name);",
									"        pm.environment.set('user_email', response.data.user.email);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"sayem@gmail.com\",\n    \"password\": \"admin1234\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"login"
							]
						},
						"description": "Step 1: Login to get authentication token"
					},
					"response": []
				},
				{
					"name": "Step 2: Add Items to Cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": 1,\n    \"quantity\": 2\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"cart"
							]
						},
						"description": "Step 2: Add items to cart for order"
					},
					"response": []
				},
				{
					"name": "Step 3: Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.id) {",
									"        pm.environment.set('order_id', response.data.id);",
									"        pm.environment.set('order_number', response.data.order_number);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delivery_address_id\": 1,\n    \"delivery_type\": \"delivery\",\n    \"special_instructions\": \"Please ring the doorbell twice\",\n    \"payment_method\": \"stripe\",\n    \"tax_rate\": 8.5,\n    \"delivery_fee\": 2.99,\n    \"discount_amount\": 0\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							]
						},
						"description": "Step 3: Create order with payment_method = 'stripe' and payment_status = 'pending'"
					},
					"response": []
				},
				{
					"name": "Step 4: Create Stripe Checkout Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.session_id) {",
									"        pm.environment.set('stripe_session_id', response.data.session_id);",
									"        pm.environment.set('stripe_session_url', response.data.session_url);",
									"        console.log('Stripe Checkout URL:', response.data.session_url);",
									"        console.log('Copy this URL to browser to test payment');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_id\": {{order_id}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/payments/create-session",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"payments",
								"create-session"
							]
						},
						"description": "Step 4: Create Stripe checkout session for the order. Returns session URL for payment."
					},
					"response": []
				},
				{
					"name": "Step 5: Verify Payment (After Stripe Redirect)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session_id\": \"{{stripe_session_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/payments/verify",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"payments",
								"verify"
							]
						},
						"description": "Step 5: Verify payment after user returns from Stripe Checkout (optional - webhook handles this automatically)"
					},
					"response": []
				},
				{
					"name": "Step 6: Check Order Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"{{order_id}}"
							]
						},
						"description": "Step 6: Check order status - payment_status should be 'paid' after successful payment"
					},
					"response": []
				}
		],
		"description": "Complete payment workflow from login to successful payment verification"
	},
	{
		"name": "Complete Guest User Workflow (No Authentication)",
		"item": [
			{
				"name": "Step 1: Browse Items (Public)",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/items",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"items"
						]
					},
					"description": "Step 1: Browse available items (no authentication required)"
				},
				"response": []
			},
			{
				"name": "Step 2: Add Item to Guest Cart",
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"guest_id\": \"guest_12345\",\n    \"item_id\": 1,\n    \"quantity\": 2\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/cart",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"cart"
						]
					},
					"description": "Step 2: Add items to guest cart using guest_id from frontend"
				},
				"response": []
			},
			{
				"name": "Step 3: Add More Items to Guest Cart",
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"guest_id\": \"guest_12345\",\n    \"item_id\": 2,\n    \"quantity\": 1\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/cart",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"cart"
						]
					},
					"description": "Step 3: Add more items to guest cart"
				},
				"response": []
			},
			{
				"name": "Step 4: View Guest Cart",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/guest/cart?guest_id=guest_12345",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"cart"
						],
						"query": [
							{
								"key": "guest_id",
								"value": "guest_12345",
								"description": "Guest ID to identify cart"
							}
						]
					},
					"description": "Step 4: View guest cart with all items and totals"
				},
				"response": []
			},
			{
				"name": "Step 5: Create Guest Order",
				"event": [
					{
						"listen": "test",
						"script": {
							"exec": [
								"if (pm.response.code === 201) {",
								"    const response = pm.response.json();",
								"    if (response.success && response.data.id) {",
								"        pm.environment.set('guest_order_id', response.data.id);",
								"        pm.environment.set('guest_order_number', response.data.order_number);",
								"    }",
								"}"
							],
							"type": "text/javascript"
						}
					}
				],
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"guest_id\": \"guest_12345\",\n    \"delivery_type\": \"delivery\",\n    \"customer_name\": \"John Doe\",\n    \"customer_phone\": \"+1234567890\",\n    \"customer_email\": \"john@example.com\",\n    \"delivery_address\": {\n        \"fields\": \"Home\",\n        \"address_line_1\": \"123 Main Street\",\n        \"address_line_2\": \"Apt 4B\",\n        \"post_code\": \"12345\",\n        \"details\": \"Ring doorbell twice\"\n    },\n    \"special_instructions\": \"Extra napkins please\",\n    \"payment_method\": \"stripe\",\n    \"tax_rate\": 8.5,\n    \"delivery_fee\": 5.00,\n    \"discount_amount\": 0\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/orders",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"orders"
						]
					},
					"description": "Step 5: Create guest order with customer details and delivery address from frontend. Cart is automatically cleared after successful order creation."
				},
				"response": []
			},
			{
				"name": "Step 6: View Guest Order by Order Number",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/guest/orders/{{guest_order_number}}?guest_id=guest_12345",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"orders",
							"{{guest_order_number}}"
						],
						"query": [
							{
								"key": "guest_id",
								"value": "guest_12345",
								"description": "Guest ID to verify ownership"
							}
						]
					},
					"description": "Step 6: Track guest order using order number (for order tracking page)"
				},
				"response": []
			},
			{
				"name": "Step 7: View All Guest Orders",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/guest/orders?guest_id=guest_12345",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"orders"
						],
						"query": [
							{
								"key": "guest_id",
								"value": "guest_12345",
								"description": "Guest ID to retrieve all orders"
							}
						]
					},
					"description": "Step 7: View all orders placed by this guest user"
				},
				"response": []
			}
		],
		"description": "Complete workflow for guest users from browsing to order placement without authentication"
	},
	{
		"name": "Guest Stripe Payment Integration",
		"item": [
			{
				"name": "Create Guest Stripe Checkout Session",
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"order_id\": 1,\n    \"guest_id\": \"guest_12345\"\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/payments/create-session",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"payments",
							"create-session"
						]
					},
					"description": "Create a Stripe Checkout session for a guest order. Returns session URL for payment processing."
				},
				"response": []
			},
			{
				"name": "Verify Guest Payment Session",
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"session_id\": \"cs_test_1234567890abcdef\",\n    \"guest_id\": \"guest_12345\"\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/payments/verify",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"payments",
							"verify"
						]
					},
					"description": "Verify payment session after redirect from Stripe Checkout (optional - webhook handles this automatically)"
				},
				"response": []
			},
			{
				"name": "Get Guest Payment Session Status",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/guest/payments/session-status?session_id=cs_test_1234567890abcdef&guest_id=guest_12345",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"payments",
							"session-status"
						],
						"query": [
							{
								"key": "session_id",
								"value": "cs_test_1234567890abcdef",
								"description": "Stripe checkout session ID"
							},
							{
								"key": "guest_id",
								"value": "guest_12345",
								"description": "Guest ID to verify ownership"
							}
						]
					},
					"description": "Get current status of a guest Stripe checkout session"
				},
				"response": []
			}
		],
		"description": "Guest Stripe payment integration endpoints for creating checkout sessions, verifying payments, and handling webhooks (no authentication required)"
	},
	{
		"name": "Complete Guest Payment Workflow (No Authentication)",
		"item": [
			{
				"name": "Step 1: Browse Items (Public)",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/items",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"items"
						]
					},
					"description": "Step 1: Browse available items (no authentication required)"
				},
				"response": []
			},
			{
				"name": "Step 2: Add Item to Guest Cart",
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"guest_id\": \"guest_12345\",\n    \"item_id\": 1,\n    \"quantity\": 2\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/cart",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"cart"
						]
					},
					"description": "Step 2: Add items to guest cart using guest_id from frontend"
				},
				"response": []
			},
			{
				"name": "Step 3: Add More Items to Guest Cart",
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"guest_id\": \"guest_12345\",\n    \"item_id\": 2,\n    \"quantity\": 1\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/cart",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"cart"
						]
					},
					"description": "Step 3: Add more items to guest cart"
				},
				"response": []
			},
			{
				"name": "Step 4: View Guest Cart",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/guest/cart?guest_id=guest_12345",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"cart"
						],
						"query": [
							{
								"key": "guest_id",
								"value": "guest_12345",
								"description": "Guest ID to identify cart"
							}
						]
					},
					"description": "Step 4: View guest cart with all items and totals"
				},
				"response": []
			},
			{
				"name": "Step 5: Create Guest Order with Stripe Payment",
				"event": [
					{
						"listen": "test",
						"script": {
							"exec": [
								"if (pm.response.code === 201) {",
								"    const response = pm.response.json();",
								"    if (response.success && response.data.id) {",
								"        pm.environment.set('guest_order_id', response.data.id);",
								"        pm.environment.set('guest_order_number', response.data.order_number);",
								"    }",
								"}"
							],
							"type": "text/javascript"
						}
					}
				],
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"guest_id\": \"guest_12345\",\n    \"delivery_type\": \"delivery\",\n    \"customer_name\": \"John Doe\",\n    \"customer_phone\": \"+1234567890\",\n    \"customer_email\": \"john@example.com\",\n    \"delivery_address\": {\n        \"fields\": \"Home\",\n        \"address_line_1\": \"123 Main Street\",\n        \"address_line_2\": \"Apt 4B\",\n        \"post_code\": \"12345\",\n        \"details\": \"Ring doorbell twice\"\n    },\n    \"special_instructions\": \"Extra napkins please\",\n    \"payment_method\": \"stripe\",\n    \"tax_rate\": 8.5,\n    \"delivery_fee\": 5.00,\n    \"discount_amount\": 0\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/orders",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"orders"
						]
					},
					"description": "Step 5: Create guest order with payment_method = 'stripe' and payment_status = 'pending'"
				},
				"response": []
			},
			{
				"name": "Step 6: Create Guest Stripe Checkout Session",
				"event": [
					{
						"listen": "test",
						"script": {
							"exec": [
								"if (pm.response.code === 200) {",
								"    const response = pm.response.json();",
								"    if (response.success && response.data.session_id) {",
								"        pm.environment.set('guest_stripe_session_id', response.data.session_id);",
								"        pm.environment.set('guest_stripe_session_url', response.data.session_url);",
								"        console.log('Guest Stripe Checkout URL:', response.data.session_url);",
								"        console.log('Copy this URL to browser to test payment');",
								"    }",
								"}"
							],
							"type": "text/javascript"
						}
					}
				],
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"order_id\": {{guest_order_id}},\n    \"guest_id\": \"guest_12345\"\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/payments/create-session",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"payments",
							"create-session"
						]
					},
					"description": "Step 6: Create Stripe checkout session for the guest order. Returns session URL for payment."
				},
				"response": []
			},
			{
				"name": "Step 7: Verify Guest Payment (After Stripe Redirect)",
				"request": {
					"method": "POST",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"body": {
						"mode": "raw",
						"raw": "{\n    \"session_id\": \"{{guest_stripe_session_id}}\",\n    \"guest_id\": \"guest_12345\"\n}"
					},
					"url": {
						"raw": "{{base_url}}/api/v1/guest/payments/verify",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"payments",
							"verify"
						]
					},
					"description": "Step 7: Verify payment after user returns from Stripe Checkout (optional - webhook handles this automatically)"
				},
				"response": []
			},
			{
				"name": "Step 8: Check Guest Order Status",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/guest/orders/{{guest_order_number}}?guest_id=guest_12345",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"guest",
							"orders",
							"{{guest_order_number}}"
						],
						"query": [
							{
								"key": "guest_id",
								"value": "guest_12345",
								"description": "Guest ID to verify ownership"
							}
						]
					},
					"description": "Step 8: Check guest order status - payment_status should be 'paid' after successful payment"
				},
				"response": []
			}
		],
		"description": "Complete payment workflow for guest users from browsing to successful payment verification without authentication"
	},
		{
			"name": "Post Codes Management",
			"item": [
				{
					"name": "Get All Post Codes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/post-codes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"post-codes"
							]
						},
						"description": "Get all post codes with delivery charges and status (public endpoint, no authentication required)"
					},
					"response": []
				},
				{
					"name": "Search Post Codes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/post-codes?search=1000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"post-codes"
							],
							"query": [
								{
									"key": "search",
									"value": "1000",
									"description": "Search post codes by code (ignores hyphens and slashes)"
								}
							]
						},
						"description": "Search post codes by code. Ignores hyphens (-), slashes (/), and spaces in both search term and database values. Example: searching '100-0' will match '1000', '100-0', '100/0', '100 0', etc."
					},
					"response": []
				},
				{
					"name": "Search Post Codes with Hyphens",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/post-codes?search=100-0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"post-codes"
							],
							"query": [
								{
									"key": "search",
									"value": "100-0",
									"description": "Search with hyphens - will match '1000', '100-0', '100/0', '100 0', etc."
								}
							]
						},
						"description": "Search post codes with hyphens. The search will ignore the hyphen and match codes like '1000', '100-0', '100/0', '100 0', etc."
					},
					"response": []
				},
				{
					"name": "Search Post Codes with Slashes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/post-codes?search=100/0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"post-codes"
							],
							"query": [
								{
									"key": "search",
									"value": "100/0",
									"description": "Search with slashes - will match '1000', '100-0', '100/0', '100 0', etc."
								}
							]
						},
						"description": "Search post codes with slashes. The search will ignore the slash and match codes like '1000', '100-0', '100/0', '100 0', etc."
					},
					"response": []
				},
				{
					"name": "Search Post Codes with Spaces",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/post-codes?search=e6 2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"post-codes"
							],
							"query": [
								{
									"key": "search",
									"value": "e6 2",
									"description": "Search with spaces - will match 'E6-2', 'E6/2', 'E6 2', 'e62', etc."
								}
							]
						},
						"description": "Search post codes with spaces. The search will ignore the space and match codes like 'E6-2', 'E6/2', 'E6 2', 'e62', etc. Perfect for searching 'E6-2' with 'e6 2'."
					},
					"response": []
				},
				{
					"name": "Create Post Code",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"1000\",\n    \"deliver_charge\": 5.00,\n    \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/post-codes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"post-codes"
							]
						},
						"description": "Create a new post code with delivery charge and status (admin role required)"
					},
					"response": []
				},
				{
					"name": "Get Post Code by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/post-codes/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"post-codes",
								"1"
							]
						},
						"description": "Get a specific post code by ID (public endpoint, no authentication required)"
					},
					"response": []
				},
				{
					"name": "Update Post Code",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"1000\",\n    \"deliver_charge\": 7.50,\n    \"status\": \"inactive\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/post-codes/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"post-codes",
								"1"
							]
						},
						"description": "Update a post code by ID (admin role required)"
					},
					"response": []
				},
				{
					"name": "Delete Post Code",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/post-codes/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"post-codes",
								"1"
							]
						},
						"description": "Delete a post code by ID (admin role required)"
					},
					"response": []
				}
			],
			"description": "Post codes management endpoints - GET operations are public (no authentication), POST/PUT/DELETE require admin role"
		},
		{
			"name": "Guest Post Codes Management",
			"item": [
				{
					"name": "Get All Guest Post Codes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/guest-post-codes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"guest-post-codes"
							]
						},
						"description": "Get all guest post codes (token required)"
					},
					"response": []
				},
				{
					"name": "Create Guest Post Code",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"2000\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/guest-post-codes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"guest-post-codes"
							]
						},
						"description": "Create a new guest post code (public endpoint, no authentication required)"
					},
					"response": []
				},
				{
					"name": "Get Guest Post Code by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/guest-post-codes/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"guest-post-codes",
								"1"
							]
						},
						"description": "Get a specific guest post code by ID (token required)"
					},
					"response": []
				},
				{
					"name": "Update Guest Post Code",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"2001\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/guest-post-codes/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"guest-post-codes",
								"1"
							]
						},
						"description": "Update a guest post code by ID (authentication required)"
					},
					"response": []
				},
				{
					"name": "Delete Guest Post Code",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/guest-post-codes/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"guest-post-codes",
								"1"
							]
						},
						"description": "Delete a guest post code by ID (authentication required)"
					},
					"response": []
				}
			],
		"description": "Guest post codes management endpoints - POST is public (no authentication), GET/UPDATE/DELETE require authentication"
	},
	{
		"name": "Admin Orders Management",
		"item": [
			{
				"name": "Get All Orders (Admin)",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Authorization",
							"value": "Bearer {{admin_token}}",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/admin/orders",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"admin",
							"orders"
						]
					},
					"description": "Get all orders in the system with comprehensive filtering and summary statistics (admin role required)"
				},
				"response": []
			},
			{
				"name": "Get All Orders with Filters",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Authorization",
							"value": "Bearer {{admin_token}}",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/admin/orders?status=pending&payment_status=paid&user_type=authenticated&per_page=10",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"admin",
							"orders"
						],
						"query": [
							{
								"key": "status",
								"value": "pending",
								"description": "Filter by order status (pending, completed, cancelled)"
							},
							{
								"key": "payment_status",
								"value": "paid",
								"description": "Filter by payment status (pending, paid, failed, refunded)"
							},
							{
								"key": "user_type",
								"value": "authenticated",
								"description": "Filter by user type (authenticated, guest)"
							},
							{
								"key": "per_page",
								"value": "10",
								"description": "Number of orders per page"
							}
						]
					},
					"description": "Get all orders with various filters applied (admin role required)"
				},
				"response": []
			},
			{
				"name": "Search Orders by Customer Info",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Authorization",
							"value": "Bearer {{admin_token}}",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/admin/orders?search=john@example.com",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"admin",
							"orders"
						],
						"query": [
							{
								"key": "search",
								"value": "john@example.com",
								"description": "Search by order number, customer name, or customer email"
							}
						]
					},
					"description": "Search orders by customer information (admin role required)"
				},
				"response": []
			},
			{
				"name": "Get Orders by Date Range",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Authorization",
							"value": "Bearer {{admin_token}}",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/admin/orders?date_from=2025-01-01&date_to=2025-12-31",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"admin",
							"orders"
						],
						"query": [
							{
								"key": "date_from",
								"value": "2025-01-01",
								"description": "Start date (YYYY-MM-DD)"
							},
							{
								"key": "date_to",
								"value": "2025-12-31",
								"description": "End date (YYYY-MM-DD)"
							}
						]
					},
					"description": "Get orders within a specific date range (admin role required)"
				},
				"response": []
			},
			{
				"name": "Get Guest Orders Only",
				"request": {
					"method": "GET",
					"header": [
						{
							"key": "Authorization",
							"value": "Bearer {{admin_token}}",
							"type": "text"
						},
						{
							"key": "Accept",
							"value": "application/json",
							"type": "text"
						}
					],
					"url": {
						"raw": "{{base_url}}/api/v1/admin/orders?user_type=guest&payment_method=stripe",
						"host": [
							"{{base_url}}"
						],
						"path": [
							"api",
							"v1",
							"admin",
							"orders"
						],
						"query": [
							{
								"key": "user_type",
								"value": "guest",
								"description": "Filter for guest orders only"
							},
							{
								"key": "payment_method",
								"value": "stripe",
								"description": "Filter by payment method (stripe, cash)"
							}
						]
					},
				"description": "Get only guest orders with Stripe payments (admin role required)"
			},
			"response": []
		},
		{
			"name": "Get Single Order Details (Admin)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/admin/orders/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"orders",
						"1"
					]
				},
				"description": "Get detailed information for a specific order (admin role required)"
			},
			"response": []
		},
		{
			"name": "Update Order (Admin)",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"preparing\",\n    \"payment_status\": \"paid\",\n    \"special_instructions\": \"Updated instructions\",\n    \"estimated_delivery_time\": \"2025-10-01T12:00:00Z\",\n    \"delivery_fee\": 5.00,\n    \"discount_amount\": 2.00,\n    \"notes\": \"Order is being prepared\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/admin/orders/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"orders",
						"1"
					]
				},
				"description": "Update order details including status, payment status, and other fields (admin role required)"
			},
			"response": []
		},
		{
			"name": "Cancel Order (Admin)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cancellation_reason\": \"Customer requested cancellation\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/admin/orders/1/cancel",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"orders",
						"1",
						"cancel"
					]
				},
				"description": "Cancel an order with optional cancellation reason (admin role required)"
			},
			"response": []
		},
		{
			"name": "Delete Order (Admin)",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{admin_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/admin/orders/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"orders",
						"1"
					]
				},
				"description": "Delete an order (only pending, unpaid orders can be deleted) (admin role required)"
			},
			"response": []
		}
	],
	"description": "Admin-only endpoints for viewing and managing all orders in the system (admin role required)"
},
	{
		"name": "Admin User Management",
				"item": [
				{
					"name": "Create Admin User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Admin User\",\n    \"email\": \"admin@mamaspizza.com\",\n    \"password\": \"admin123\",\n    \"password_confirmation\": \"admin123\",\n    \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/create/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"create",
								"user"
							]
						},
						"description": "Create a new admin user (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Create Staff User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Staff User\",\n    \"email\": \"staff@mamaspizza.com\",\n    \"password\": \"staff123\",\n    \"password_confirmation\": \"staff123\",\n    \"role\": \"staff\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/create/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"create",
								"user"
							]
						},
						"description": "Create a new staff user (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Create Regular User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Regular User\",\n    \"email\": \"user@mamaspizza.com\",\n    \"password\": \"user123\",\n    \"password_confirmation\": \"user123\",\n    \"role\": \"user\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/create/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"create",
								"user"
							]
						},
						"description": "Create a new regular user (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users?per_page=15&search=&role=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "per_page",
									"value": "15",
									"description": "Number of users per page (default: 15)"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search by name or email"
								},
								{
									"key": "role",
									"value": "",
									"description": "Filter by role (admin, staff, user)"
								}
							]
						},
						"description": "Get all users with pagination and filtering (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get All Users - Search by Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users?search=John&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "search",
									"value": "John",
									"description": "Search users by name or email"
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Number of users per page"
								}
							]
						},
						"description": "Search users by name or email"
					},
					"response": []
				},
				{
					"name": "Get All Users - Filter by Role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users?role=user&per_page=20",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "role",
									"value": "user",
									"description": "Filter by user role"
								},
								{
									"key": "per_page",
									"value": "20",
									"description": "Number of users per page"
								}
							]
						},
						"description": "Get all users filtered by specific role"
					},
					"response": []
				}
			],
			"description": "Admin-only user management endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8001",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_role",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_email",
			"value": "john@example.com",
			"type": "string"
		},
		{
			"key": "user_password",
			"value": "password123",
			"type": "string"
		},
		{
			"key": "order_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "order_number",
			"value": "",
			"type": "string"
		},
		{
			"key": "stripe_session_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "stripe_session_url",
			"value": "",
			"type": "string"
		},
		{
			"key": "guest_order_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "guest_order_number",
			"value": "",
			"type": "string"
		}
	]
}
